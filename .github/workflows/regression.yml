name: Regression Tests

on:
  push:
  pull_request:
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0 #for better blame info
    - name: Download vendored dependencies
      run: go mod vendor
    - name: Tests and coverage
      run: go test -v -coverpkg=./... -coverprofile=coverage-waf.out ./...
    - name: SonarCloud Scan
      # We only push sonarcloud for golang v1.17.x
      if: ${{ matrix.go-version == '1.17.x' && github.repository_owner == 'corazawaf' }}
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Remote Coverage
      if: ${{ matrix.go-version == '1.17.x' && github.repository_owner != 'corazawaf' }}
      env:
        TESTCOVERAGE_THRESHOLD: 50
      run: |
        echo "Validating coverage..."
        coverage = `cat coverage-waf.out| grep total | grep -Eo '[0-9]+\.[0-9]+'`
        echo "Current coverage: %coverage %"
        if [ "$coverage" -lt "$TESTCOVERAGE_THRESHOLD" ]; then
          echo "Coverage is below threshold: $coverage"
          exit 1
        else
          echo "Coverage is OK: $coverage"
        fi
